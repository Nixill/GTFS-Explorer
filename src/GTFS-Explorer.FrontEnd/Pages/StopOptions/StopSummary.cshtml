@page "{stopId}"
@model GTFS_Explorer.FrontEnd.Pages.StopOptions.StopSummaryModel
@{
    ViewData["Title"] = "StopSummary";
}

<section>
    <div class="header">
        <div class="header-right">
            <a class="active" asp-page="/StopOptions/StopSummary" asp-route-stopId="@Model.StopId">Summary</a>
            <a asp-page="/StopOptions/StopSchedule" asp-route-stopId="@Model.StopId">Stop Schedule</a>
            <a asp-page="/StopOptions/NearbyStops" asp-route-stopId="@Model.StopId">Nearby Stops</a>
        </div>
    </div>
    <div class="floater d-flex justify-content-around">
		<div class="p-3">
			<h3 class="text-white">@Model.Stop.Name</h3>
			@if (!string.IsNullOrEmpty(Model.Stop.Description))
			{
				<p class="text-white">@Model.Stop.Description</p>
			}
			@if (!string.IsNullOrEmpty(Model.Stop.Url ))
			{
				<p class="text-white">URL: @Model.Stop.Url</p>
			}

            <table class="table table-hover floater-background-color scrollbar" 
				   id="style-1">
                <thead>
                    <tr>
						<th>
							Routes That Stop here
						</th>
                    </tr>
                </thead>
				<tbody>
					@foreach (var route in Model.RoutesServingStop)
					{
						<tr class="mouse-pointer"
							onclick="location.href = '@(Url.Page("/RouteOptions/RouteSummary", new { routeId = route.Id }))'">
							<td>@route.LongName</td>
						</tr>
					}
				</tbody>
            </table>
		</div>
        <div class="floater-content">
            <div class="h-100 d-block" id="stop-map"></div>
        </div>
    </div>
    <form>
        <input type="file" id="selectFile" class="hidden" />
        <label class="select-file" for="selectFile">Select New File</label>
        <a asp-page="/MainPages/Stops" id="returnToStops" />
        <label class="select-file" for="returnToStops">Return to Stops</label>
    </form>
</section>

@section Scripts
{
	<script>
		hideLoader();
		const stopMap = new L.map('stop-map').setView([@Model.Stop.Latitude, @Model.Stop.Longitude], 13);
		const osmAttribution = '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors';
		const osmTileUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';

		const tiles = L.tileLayer(osmTileUrl, {
			attribution: osmAttribution
		});

		tiles.addTo(stopMap);

		var stopMarker = L.marker([@Model.Stop.Latitude, @Model.Stop.Longitude]);
		stopMarker.addTo(stopMap)
			.bindPopup('@Model.Stop.Name')
			.openPopup();

		stopMarker.on("click", () => {
			stopMarker.openPopup();
		});
	</script>
}